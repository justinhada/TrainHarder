plugins {
    id 'java'
    id 'io.quarkus'
    id 'jacoco'
    id "org.sonarqube" version '3.3'
}

repositories {
    mavenCentral()
    mavenLocal()
}

[
        "tests",
        "integrationstests"
].each {
    apply from: "gradle/${it}.gradle"
}

dependencies {
    implementation enforcedPlatform("io.quarkus:quarkus-bom:$project.quarkusVersion")

    implementation "io.quarkus:quarkus-hibernate-orm",
            "io.quarkus:quarkus-hibernate-orm-panache",
            "io.quarkus:quarkus-jdbc-mariadb",
            "io.quarkus:quarkus-jdbc-h2",
            "io.quarkus:quarkus-agroal",
            "io.quarkus:quarkus-resteasy",
            'io.quarkus:quarkus-resteasy-multipart',
            "io.quarkus:quarkus-resteasy-jsonb",
            "io.quarkus:quarkus-smallrye-openapi",
            "io.quarkus:quarkus-smallrye-jwt",
            "io.quarkus:quarkus-smallrye-jwt-build",
            "io.quarkus:quarkus-arc",
            "io.quarkus:quarkus-test-common",
            "io.quarkus:quarkus-security-jpa",
            "io.quarkus:quarkus-swagger-ui",
            "io.quarkus:quarkus-hibernate-validator:$project.hibernateVersion",
            "org.projectlombok:lombok:$project.lombokVersion",
            "com.google.guava:guava:$project.guavaVersion",
            "commons-validator:commons-validator:$project.apacheVersion",
            "com.prowidesoftware:pw-swift-core:$project.swiftVersion",
            "com.icegreen:greenmail-junit5:2.0.0"

    annotationProcessor "org.projectlombok:lombok:$project.lombokVersion"
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = file("${buildDir}/jacoco")
}

task mergeJacocoReports(type: JacocoReport) {
    dependsOn test
    sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(sourceSets.main.output)
    executionData(
            file("${buildDir}/jacoco/test.exec"),
            file("${project.buildDir}/jacoco-quarkus.exec")
    )
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.required.set(true)
        html.destination file("${buildDir}/jacoco/merge")
        xml.destination file("${buildDir}/jacoco/merge.xml")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "justinhada_TrainHarder"
        property "sonar.organization", "justinhada"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv("SONAR_TOKEN")
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/jacoco/merge.xml"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

compileIntegrationTestJava {
    options.encoding = 'UTF-8'
}

group 'de.justinharder.trainharder'
version '1.0.1'

project.tasks['sonarqube'].dependsOn jacocoTestReport
project.tasks['integrationTest'].dependsOn quarkusBuild
project.tasks['check'].dependsOn integrationTest
