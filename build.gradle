plugins {
    id 'java'
    id 'war'
    id 'jacoco'
    id "org.sonarqube" version '3.3'
}

repositories {
    mavenCentral()
    mavenLocal()
}

[
        "integrationstests",
        "tests",
        "slf4j",
].each {
    apply from: "gradle/${it}.gradle"
}

war {
    archiveFileName = 'TrainHarder.war'
}

configurations {
    testContainerAgent
}

dependencies {
    implementation "org.projectlombok:lombok:1.18.30",
            "org.apache.commons:commons-math3:3.6.1",
            "com.google.guava:guava:30.0-jre",
            "org.primefaces:primefaces:13.0.2",
            "jakarta.platform:jakarta.jakartaee-api:10.0.0",
            "jakarta.xml.bind:jakarta.xml.bind-api:4.0.1",
            "jakarta.servlet:jakarta.servlet-api:6.0.0",
            "jakarta.security.enterprise:jakarta.security.enterprise-api:3.0.0",
            "jakarta.mvc:jakarta.mvc-api:2.1.0",
            "org.mvc-spec.ozark:ozark-core:1.0.0-m04",
            "org.mvc-spec.ozark:ozark-resteasy:1.0.0-m04",
            "jakarta.mail:jakarta.mail-api:2.1.2",
            "nl.jqno.equalsverifier:equalsverifier:3.15.3",
            "com.icegreen:greenmail-junit5:1.6.1"

    integrationTestRuntimeOnly 'org.hibernate:hibernate-core:5.4.24.Final',
            "org.mariadb.jdbc:mariadb-java-client:2.6.0"

    testContainerAgent "org.jacoco:org.jacoco.agent:0.8.8:runtime"

    annotationProcessor "org.projectlombok:lombok:1.18.30"
}

jacoco {
    toolVersion = "0.8.8"
    reportsDir = file("${buildDir}/jacoco")
}

task mergeJacocoReports(type: JacocoReport) {
    dependsOn test, integrationTest
    sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(sourceSets.main.output)
    executionData(
            file("${buildDir}/jacoco/test.exec"),
            file("${buildDir}/jacoco/integrationTest.exec")
//            file("${buildDir}/jacocoit/jacoco-docker.exec")
    )
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacoco/merge")
        xml.destination file("${buildDir}/jacoco/merge.xml")
    }
}

task kopiereJacocoAgent(type: Copy) {
    from configurations.testContainerAgent
    into "${buildDir}/jacocoAgent"
    rename { String fileName ->
        "org.jacoco.agent.jar"
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "justinhada_TrainHarder"
        property "sonar.organization", "justinhada"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/jacoco/merge.xml"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

compileIntegrationTestJava {
    options.encoding = 'UTF-8'
}

tasks['integrationTest'].dependsOn kopiereJacocoAgent

version = '0.0.2'
